[IP Location Count]
action.email.useNSSubject = 1
alert.track = 0
dispatch.earliest_time = -24h@h
dispatch.latest_time = now
display.general.type = statistics
display.page.search.tab = statistics
display.visualizations.charting.chart = area
display.visualizations.show = 0
request.ui_dispatch_app = search
request.ui_dispatch_view = search
search = index=openpath_eventgen |stats count by client_location| sort-count

[Top 50 Web Traffic Location]
action.email.useNSSubject = 1
alert.track = 0
cron_schedule = 0 * * * *
dispatch.earliest_time = -7d@h
dispatch.latest_time = now
display.events.fields = ["host","source","sourcetype","src_ip","user","vendor_action","search","search_et","search_id","search_lt","search_startup_time"]
display.general.type = statistics
display.page.search.tab = statistics
display.visualizations.show = 0
request.ui_dispatch_app = search
request.ui_dispatch_view = search
schedule_window = auto
search = index=openpath_eventgen sourcetype="pan:traffic" | top dest_location dest_ip dest_port application limit=50

[No No No...]
action.email.useNSSubject = 1
alert.track = 0
description = Multiple attempts at restricted pages
dispatch.earliest_time = 0
display.general.type = statistics
display.page.search.tab = statistics
display.visualizations.show = 0
request.ui_dispatch_app = search
request.ui_dispatch_view = search
search = index= main sourcetype=access_combined_wcookie status=403 |stats count as attempts by clientip | sort-attempts

[Search done by Yemi Falusi]
action.email.useNSSubject = 1
alert.track = 0
dispatch.earliest_time = -24h@h
dispatch.latest_time = now
display.events.fields = ["host","source","sourcetype","index"]
display.general.type = visualizations
display.page.search.tab = visualizations
display.visualizations.charting.chart = bar
display.visualizations.show = 0
request.ui_dispatch_app = search
request.ui_dispatch_view = search
search = index="_audit"  sourcetype="audittrail" user="yemi.falusi" action=search | top search, host showperc=f

[linux_user_report_eventgenlast4hours]
action.email.useNSSubject = 1
alert.track = 0
description = Users who search openpath_eventgen index from their linux OS in the past 4 hours
dispatch.earliest_time = -4h@m
dispatch.latest_time = now
dispatchAs = user
display.events.fields = ["host","source","sourcetype","index"]
display.visualizations.charting.chart = bar
display.visualizations.show = 0
request.ui_dispatch_app = search
request.ui_dispatch_view = search
search = index=openpath_eventgen sourcetype="linux_audit"
workload_pool = undefined

[Top Servers Deemed as threats]
action.email.useNSSubject = 1
alert.track = 0
description = quiz prep
dispatch.earliest_time = -24h@h
dispatch.latest_time = now
display.events.fields = ["host","source","sourcetype","index"]
display.general.type = statistics
display.page.search.tab = statistics
display.visualizations.charting.chart = bar
display.visualizations.custom.type = location_tracker_app.location_tracker
display.visualizations.show = 0
display.visualizations.type = singlevalue
request.ui_dispatch_app = search
request.ui_dispatch_view = search
search = index="openpath_eventgen" sourcetype="pan:threat" action | top server_ip|sort -_time

[ip_count]
action.email.useNSSubject = 1
alert.track = 0
dispatch.earliest_time = -30d@d
dispatch.latest_time = now
display.general.type = statistics
display.page.search.tab = statistics
display.visualizations.show = 0
request.ui_dispatch_app = search
request.ui_dispatch_view = search
search = index=main sourcetype="tenable:sc:assets" | stats count by ip | sort - count

[response_codes]
action.email.useNSSubject = 1
alert.track = 0
dispatch.earliest_time = 0
display.general.type = visualizations
display.page.search.tab = visualizations
display.statistics.show = 0
request.ui_dispatch_app = search
request.ui_dispatch_view = search
search = index="njock_openpath_index" sourcetype="access_combined_wcookie"| chart count(eval (like(status,"2%"))) AS Success, count(eval(like(status,"4%")  OR like(status,"5%"))) AS  Error by uri_path

[sc_assets]
action.email.useNSSubject = 1
alert.track = 0
dispatch.earliest_time = -30d@d
dispatch.latest_time = now
display.general.type = statistics
display.page.search.tab = statistics
display.visualizations.show = 0
request.ui_dispatch_app = search
request.ui_dispatch_view = search
search = index=main sourcetype="tenable:sc:assets" | table sc_address, severityHigh, temp_id, policyName, total, repository, repository.name

[timechart_uri_path]
action.email.useNSSubject = 1
alert.track = 0
dispatch.earliest_time = 0
display.general.type = visualizations
display.page.search.tab = visualizations
display.statistics.show = 0
display.visualizations.charting.chart = line
request.ui_dispatch_app = search
request.ui_dispatch_view = search
search = index="njock_openpath_index" sourcetype="access_combined_wcookie"  | timechart count by uri_path

[top_referring]
action.email.useNSSubject = 1
alert.track = 0
dispatch.earliest_time = 0
display.general.type = statistics
display.page.search.tab = statistics
display.visualizations.show = 0
request.ui_dispatch_app = search
request.ui_dispatch_view = search
search = index="njock_openpath_index" sourcetype="access_combined_wcookie" | stats dc(clientip) AS Referals by referer_domain | sort -Referals

[Threats]
action.email.useNSSubject = 1
alert.track = 0
cron_schedule = 0 6 * * *
dispatch.earliest_time = -7d@h
dispatch.latest_time = now
display.general.type = statistics
display.page.search.tab = statistics
display.visualizations.show = 0
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
search = index="openpath_eventgen" |stats count by threat

[attempts_logs]
action.email.useNSSubject = 1
alert.track = 0
dispatch.earliest_time = -7d@h
dispatch.latest_time = now
display.events.fields = ["host","source","sourcetype","get_ip","status_port"]
display.general.type = statistics
display.page.search.tab = statistics
display.visualizations.charting.chart = line
display.visualizations.show = 0
request.ui_dispatch_app = search
request.ui_dispatch_view = search
search = index=openpath_eventgen sourcetype=WinEventLog |stats count as attempts by id

[Splunk Logins]
action.email = 1
action.email.to = rufus.gillette@openpathus.com, sahr.lebbie@openpathus.com
action.email.useNSSubject = 1
alert.suppress = 1
alert.suppress.period = 60s
alert.track = 0
counttype = number of events
cron_schedule = 0 6 * * 1
dispatch.earliest_time = -1w
dispatch.latest_time = now
display.events.type = raw
display.general.type = statistics
display.page.search.mode = verbose
display.page.search.tab = statistics
display.visualizations.charting.chart = line
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = search
request.ui_dispatch_view = search
search = |makeresults annotate=true |eval Answer15="index=_audit user=* login info=succeeded" |collect index=rufus_index sourcetype=openpath_test2

[whenever_yemi_login]
action.email = 1
action.email.cc = mrfalusi@gmail.com
action.email.sendpdf = 1
action.email.sendresults = 1
action.email.to = zazazaislife@yahoo.com
action.email.useNSSubject = 1
alert.suppress = 0
alert.track = 0
counttype = number of events
cron_schedule = 0 6 * * 1
dispatch.earliest_time = -1w
dispatch.latest_time = now
display.events.fields = ["host","source","sourcetype","index","request"]
display.visualizations.charting.chart = area
display.visualizations.custom.type = location_tracker_app.location_tracker
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = search
request.ui_dispatch_view = search
search = index=_internal eventtype="splunkd-log" user=y*

[Yemi's login]
action.email = 1
action.email.cc = mrfalusi@gmail.com
action.email.sendpdf = 1
action.email.sendresults = 1
action.email.to = zazazaislife@yahoo.com
action.email.useNSSubject = 1
alert.track = 0
cron_schedule = 0 1 * * *
dispatch.earliest_time = rt-1m
dispatch.latest_time = rtnow
dispatchAs = user
display.events.fields = ["host","source","sourcetype","index","request"]
display.visualizations.charting.chart = area
display.visualizations.custom.type = location_tracker_app.location_tracker
display.visualizations.show = 0
quantity = 0
relation = greater than
request.ui_dispatch_app = search
request.ui_dispatch_view = search
search = index=_internal eventtype="splunkd-log" user=y*

[user_access]
action.email = 1
action.email.cc = mrfalusi@gmail.com
action.email.subject.alert = Splunk Alert: $mimi$
action.email.to = mireillenjock@outlook.com
action.email.useNSSubject = 1
alert.suppress = 0
alert.track = 0
counttype = number of events
cron_schedule = 0 0 15 * *
dispatch.earliest_time = -1mon
dispatch.latest_time = now
display.events.fields = ["host","source","sourcetype","get_ip","status_port"]
display.general.type = statistics
display.page.search.tab = statistics
display.visualizations.charting.chart = bar
display.visualizations.type = singlevalue
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = search
request.ui_dispatch_view = search
search = . index=openpath_random sourcetype="access_combined" | stats count by user, action,uri

[user_audit]
action.email = 1
action.email.cc = mrfalusi@gmail.com
action.email.subject.alert = Splunk Alert: $mimi$
action.email.to = mireillenjock@outlook.com
action.email.useNSSubject = 1
alert.suppress = 0
alert.track = 0
counttype = number of events
cron_schedule = 0 0 15 * *
dispatch.earliest_time = -1mon
dispatch.latest_time = now
display.events.fields = ["host","source","sourcetype","get_ip","status_port"]
display.general.type = statistics
display.page.search.tab = statistics
display.visualizations.charting.chart = bar
display.visualizations.type = singlevalue
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = search
request.ui_dispatch_view = search
search = . index=openpath_random sourcetype="access_combined" | stats count by user, action,uri

[Mimi_session]
action.email = 1
action.email.cc = mrfalusi@gmail.com
action.email.message.report = The scheduled report '$mimi$' has run.
action.email.subject.report = Splunk Report: $mimi$
action.email.to = mireillenjock@outlook.com
action.email.useNSSubject = 1
alert.track = 0
cron_schedule = 0 0 * * *
dispatch.earliest_time = -30d@d
dispatch.latest_time = now
display.visualizations.show = 0
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
schedule_window = 15
search = session

[Splunk User Login]
action.email = 1
action.email.inline = 1
action.email.sendresults = 1
action.email.subject.alert = Splunk Alert: $User Login$
action.email.to = sunnykamara1@gmail.com
action.email.useNSSubject = 1
alert.suppress = 0
alert.track = 0
counttype = number of events
cron_schedule = 0 10 * * *
description = Alerts that show when a user logins into Splunk.
dispatch.earliest_time = -1d
dispatch.latest_time = now
display.events.fields = ["host","source","sourcetype","src_ip","vendor_action","search","search_et","search_id","search_lt","search_startup_time","IPgeo","clientip","file","bytes","uri","uri_path","useragent","user","action"]
display.general.type = statistics
display.page.search.mode = verbose
display.page.search.tab = statistics
display.visualizations.charting.chart = pie
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = search
request.ui_dispatch_view = search
search = index=_audit user=* login action="login attempt" info=suceeded OR info=failed | stats count by host, user, action, info, _time

[Number of GET and POST per Host]
action.email = 1
action.email.cc = sunnykamara1@gmail.com
action.email.inline = 1
action.email.sendresults = 1
action.email.subject.report = Splunk Report: $GET & POST Method Report$
action.email.to = moteer@gmail.com
action.email.useNSSubject = 1
alert.track = 0
cron_schedule = 0 18 * * *
dispatch.earliest_time = -30d@d
dispatch.latest_time = now
display.events.fields = ["host","source","sourcetype","src_ip","vendor_action","search","search_et","search_id","search_lt","search_startup_time","IPgeo","clientip","file","bytes","uri","uri_path","useragent","user","action"]
display.general.type = statistics
display.page.search.mode = verbose
display.page.search.tab = statistics
display.visualizations.charting.chart = pie
display.visualizations.show = 0
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
search = index=openpath_random sourcetype=access_combined\
| stats count(eval(method="GET")) as GET, count(eval(method="POST")) as POST by host

[Splunk Failed Login]
action.email = 1
action.email.cc = sunnykamara1@gmail.com
action.email.sendcsv = 1
action.email.sendresults = 1
action.email.subject.alert = Splunk Alert: $Splunk Failed Login Attempt$
action.email.to = moteer@gmail.com
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 0
alert.track = 0
counttype = number of events
cron_schedule = 0 6 * * 1
description = Alert that show failed user login.
dispatch.earliest_time = -1w
dispatch.latest_time = now
display.events.fields = ["host","source","sourcetype","src_ip","vendor_action","search","search_et","search_id","search_lt","search_startup_time","IPgeo","clientip","file","bytes","uri","uri_path","useragent","user","action"]
display.general.type = statistics
display.page.search.mode = verbose
display.page.search.tab = statistics
display.visualizations.charting.chart = pie
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = search
request.ui_dispatch_view = search
search = index=_audit user=* login action="login attempt" info=failed | stats count by host, user, action, info, _time

[When_user_login]
action.email = 1
action.email.cc = mrfalusi@gmail.com
action.email.content_type = plain
action.email.sendpdf = 1
action.email.sendresults = 1
action.email.to = zazazaislife@yahoo.com
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 0
alert.suppress.fields = 1
alert.track = 0
counttype = number of events
cron_schedule = 0 6 * * 1
description = When user log in
dispatch.earliest_time = -1w
dispatch.latest_time = now
display.events.fields = ["host","source","sourcetype","index","request"]
display.visualizations.charting.chart = area
display.visualizations.custom.type = location_tracker_app.location_tracker
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = search
request.ui_dispatch_view = search
search = index=_internal action=login

[Login_Session]
action.email.useNSSubject = 1
alert.track = 0
dispatch.earliest_time = -24h@h
dispatch.latest_time = now
display.events.fields = ["host","source","sourcetype","action"]
display.general.type = statistics
display.page.search.tab = statistics
display.visualizations.show = 0
request.ui_dispatch_app = search
request.ui_dispatch_view = search
search = index="_audit" user=* login action="login attempt" |stats count AS COUNT by user action info

[Top Anime Characters]
action.email.useNSSubject = 1
alert.track = 0
cron_schedule = 55 8 27 7 *
dispatch.earliest_time = @d
dispatch.latest_time = now
display.events.fields = ["host","source","sourcetype","user","bytes","splunk_server_group","AccessKeys{}.AccessKeyId","AccessKeys{}.AccessKeyLastUsed.Region","AccessKeys{}.AccessKeyLastUsed.ServiceName","AccessKeys{}.CreateDate","AccessKeys{}.Status","AccessKeys{}.UserName","account_id","adefaultForAz","allocated_storage","allocation_id","ami_launch_index","Answer15","architecture","Arn","association_id","associations{}.id","associations{}.network_acl_id","associations{}.subnet_id","attach_data.attach_time","attach_data.deleteOnTermination","attach_data.device","attach_data.id","attach_data.instance_id","attach_data.status","auto_minor_version_upgrade","availability_zone","available_ip_address_count","aws_account_id","backup_retention_period","character_set_name","cidr_block","classic_link_enabled","client_token","comment","confirmed.detail","confirmed.value","country","country_based_ip","cpu_cores","create_time","CreateDate","CreationDate","custom_tag","custom_tag_str","date_hour","date_mday","date_minute","date_month","date_second","date_wday","date_year","date_zone","DBName","deaths.detail","deaths.value","default","description","dhcp_options_id","dns_name","domain","domain_name","ebs_optimized","enabled","encrypted","encryption_level","endpoint{}","engine","engine_version","error.message","etag","eventtype","fingerprint","group_name","hypervisor","hypervisor_name","id","image.attributes.architecture","image.attributes.description","image.attributes.hypervisor","image.attributes.id","image.attributes.instance_lifecycle","image.attributes.is_public","image.attributes.kernel_id","image.attributes.location","image.attributes.name","image.attributes.owner_alias","image.attributes.owner_id","image.attributes.platform","image.attributes.ramdisk_id","image.attributes.region","image.attributes.root_device_name","image.attributes.root_device_type","image.attributes.sriov_net_support","image.attributes.state","image.attributes.type","image.attributes.virtualization_type","image.id","image_id","index","info","info_max_time","info_min_time","info_search_time","instance_class","instance_id","instance_lifecycle","instance_profile","instance_profile.arn","instance_profile.id","instance_tenancy","instance_type","instances{}.id","iops","ip","ip_address","is_default","is_public","item","kernel","kernel_id","key_name","last_modified_time","lastUpdate","latest_restorable_time","launch_time","license_model","linecount","location","LocationConstraint","LoggingEnabled.TargetBucket","LoggingEnabled.TargetPrefix","mapPublicIpOnLaunch","master_username","mem_capacity","monitored","monitoring","monitoring_state","multi_az","name","Name","network_acl_entries{}.cidr_block","network_acl_entries{}.egress","network_acl_entries{}.icmp.code","network_acl_entries{}.icmp.type","network_acl_entries{}.port_range.from_port","network_acl_entries{}.port_range.to_port","network_acl_entries{}.protocol","network_acl_entries{}.rule_action","network_acl_entries{}.rule_number","network_interface_id","network_interface_owner_id","notAfter","OptionGroupName","orig_splunk_server","origin.dns_name","owner_alias","owner_id","parameter_groups{}.name","parameter_groups{}.ParameterApplyStatus","PasswordLastUsed","PasswordPolicy.AllowUsersToChangePassword","PasswordPolicy.ExpirePasswords","PasswordPolicy.HardExpiry","PasswordPolicy.MaxPasswordAge","PasswordPolicy.MinimumPasswordLength","PasswordPolicy.PasswordReusePrevention","PasswordPolicy.RequireLowercaseCharacters","PasswordPolicy.RequireNumbers","PasswordPolicy.RequireSymbols","PasswordPolicy.RequireUppercaseCharacters","Path","persistent","placement","placement_group","placement_tenancy","platform","power_state","preferred_backup_window","preferred_maintenance_window","previous_state","previous_state_code","private_dns_name","private_ip_address","progress","public_dns_name","public_ip","PubliclyAccessible","punct","ramdisk_id","reason","recovered.detail","recovered.value","region","Rest_Status","root_device_name","root_device_type","rules_egress{}.from_port","rules_egress{}.grants{}.cidr_ip","rules_egress{}.grants{}.group_id","rules_egress{}.grants{}.name","rules_egress{}.grants{}.owner_id","rules_egress{}.groups","rules_egress{}.ip_protocol","rules_egress{}.ipRanges","rules_egress{}.to_port","Rules{}.AbortIncompleteMultipartUpload.DaysAfterInitiation","Rules{}.Expiration.Days","rules{}.from_port","rules{}.grants{}.cidr_ip","rules{}.grants{}.group_id","rules{}.grants{}.name","rules{}.grants{}.owner_id","rules{}.groups","Rules{}.ID","rules{}.ip_protocol","rules{}.ipRanges","Rules{}.NoncurrentVersionExpiration.NoncurrentDays","Rules{}.NoncurrentVersionTransition.NoncurrentDays","Rules{}.NoncurrentVersionTransition.StorageClass","Rules{}.Status","rules{}.to_port","Rules{}.Transition.Days","Rules{}.Transition.StorageClass","search_name","search_now","size","snapshot_id","sourceDestCheck","splunk_server","spot_instance_request_id","sriov_net_support","start_time","state","state_code","Status","status","Status_Code","status_id","status_infos","storage_capacity","streaming","subnet_group.description","subnet_group.name","subnet_group.status","subnet_group.subnet_ids{}","subnet_group.vpc_id","subnet_id","tag","tag::eventtype","tags.Name","TagSet{}.Key","TagSet{}.Value","timeendpos","timestamp","timestartpos","trusted_signers","type","unsecured_ip","UserId","UserName","vendor","vendor_product","virtual_network_id","virtual_subnet_id","virtualization_type","vm_id","vm_name","vm_os","vm_size","volume_id","volume_size","vpc_id","vpc_security_groups{}.status","vpc_security_groups{}.vpc_group","zone"]
display.general.type = statistics
display.page.search.tab = statistics
display.visualizations.charting.chart = pie
display.visualizations.show = 0
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
search = |inputlookup fav_anime_characters.csv

[License Usage Data Cube]
alert.track = 0
auto_summarize = 1

[Soccer Players And Goals]
action.email = 1
action.email.include.search = 1
action.email.inline = 1
action.email.sendcsv = 1
action.email.sendpdf = 1
action.email.sendresults = 1
action.email.to = zazazaislife@yahoo.com
action.email.useNSSubject = 1
alert.track = 0
cron_schedule = 0 0 1 * *
dispatch.earliest_time = -24h@h
dispatch.latest_time = now
display.general.type = statistics
display.page.search.mode = verbose
display.page.search.tab = statistics
display.visualizations.charting.chart = pie
display.visualizations.show = 0
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
search = | inputlookup springseasonscorers.csv\
| lookup fallseasonscorers.csv name_players AS players output goal as goal1, assist as assist1

[Elvis_Metadata_Command_Search]
action.email.useNSSubject = 1
alert.track = 0
dispatch.earliest_time = -24h@h
dispatch.latest_time = now
display.general.type = statistics
display.page.search.tab = statistics
display.visualizations.show = 0
request.ui_dispatch_app = search
request.ui_dispatch_view = search
search = |metadata type=hosts index=_* |convert ctime(recentTime)

[most_accessed]
action.email.useNSSubject = 1
alert.track = 0
cron_schedule = 0 6 * * 1
dispatch.earliest_time = 0
display.general.type = statistics
display.page.search.tab = statistics
display.visualizations.show = 0
enableSched = 1
request.ui_dispatch_app = search
request.ui_dispatch_view = search
search = index="njock_openpath_index" sourcetype="access_combined_wcookie" | stats count by uri_path | sort - count
