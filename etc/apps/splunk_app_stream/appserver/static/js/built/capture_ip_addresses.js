webpackJsonp([0],{0:function(a,b,c){var d,e;c.p=function(){function a(){for(var a,c,d="",e=0,f=arguments.length;e<f;e++)a=arguments[e].toString(),c=a.length,c>1&&"/"==a.charAt(c-1)&&(a=a.substring(0,c-1)),d+="/"!=a.charAt(0)?"/"+a:a;if("/"!=d){var g=d.split("/"),h=g[1];if("static"==h||"modules"==h){var i=d.substring(h.length+2,d.length);d="/"+h,window.$C.BUILD_NUMBER&&(d+="/@"+window.$C.BUILD_NUMBER),window.$C.BUILD_PUSH_NUMBER&&(d+="."+window.$C.BUILD_PUSH_NUMBER),"app"==g[2]&&(d+=":"+b("APP_BUILD",0)),d+="/"+i}}var j=b("MRSPARKLE_ROOT_PATH","/"),k=b("DJANGO_ROOT_PATH",""),l=b("LOCALE","en-US"),m="";return m=k&&d.substring(0,k.length)===k?d.replace(k,k+"/"+l.toLowerCase()):"/"+l+d,""==j||"/"==j?m:j+m}function b(a,b){if(window.$C&&window.$C.hasOwnProperty(a))return window.$C[a];if(void 0!==b)return b;throw new Error("getConfigValue - "+a+" not set, no default provided")}return a("/static/app/splunk_app_stream/js/built")+"/"}(),d=[c("require/underscore"),c("shim/jquery"),c("require/backbone"),c(4),c(123),c(124),c(126),c(127)],e=function(a,b,c,d,e,f,g,h){var i=i||{};i.mediator=new h;var j=new f;d(function(a){var b=new g({app:i,captureIpAddresses:j});a.create().getContainerElement().appendChild(b.render().el)})}.apply(b,d),!(void 0!==e&&(a.exports=e))},123:function(a,b,c){var d,e;!function(f,g){d=[c("require/underscore"),c("require/backbone")],e=function(a,b){return g(f,b,a)}.apply(b,d),!(void 0!==e&&(a.exports=e))}(this,function(a,b,c){"use strict";var d=b.View.extend({className:"list",constructor:function(a){a=a||{},this.setupListView(a),b.View.call(this,a)},setupListView:function(a){c.defaults(a,{itemView:b.View,collection:new b.Collection}),this.items=[],this.itemView=a.itemView,this.collection=a.collection},setupListeners:function(){this.listenTo(this.collection,"add",this.addSingleItem,this),this.listenTo(this.collection,"reset",this.addAll,this),this.listenTo(this.collection,"remove",this.removeSingleItem,this)},render:function(){return this.addAll(),this},addAll:function(){this.removeAllItems(),this.setupListeners(),this.collection.each(function(a){this.addSingleItem(a)},this)},addSingleItem:function(a){var b=new this.itemView({model:a});return this.items.push(b),this.addListItemListeners(b),b.render(),this.$el.append(b.el),b},removeSingleItem:function(a){var b=this.getViewByModel(a);this.removeSingleView(b)},removeSingleView:function(a){var b;this.stopListening(a),a&&(this.stopListening(a.model),a.remove(),b=this.items.indexOf(a),this.items.splice(b,1))},addListItemListeners:function(a){this.listenTo(a,"all",function(){var b="item:"+arguments[0],d=c.toArray(arguments);d.splice(0,1),d.unshift(b,a),this.trigger.apply(this,d)}),this.listenTo(a.model,"change",function(){a.render()})},getViewByModel:function(a){return c.find(this.items,function(b,c){return b.model===a})},removeAllItems:function(){this.collection.each(function(a){this.removeSingleItem(a)},this)},remove:function(){b.View.prototype.remove.call(this,arguments),this.removeAllItems()}});return b.ListView=d,d})},124:function(a,b,c){var d,e;d=[c("shim/jquery"),c("require/underscore"),c("require/backbone"),c(125),c("shim/splunk.util")],e=function(a,b,c,d,e){return c.Collection.extend({model:d,url:Splunk.util.make_url(["custom","splunk_app_stream","captureipaddresses"].join("/"))})}.apply(b,d),!(void 0!==e&&(a.exports=e))},125:function(a,b,c){var d,e;d=[c("shim/jquery"),c("require/underscore"),c("require/backbone")],e=function(a,b,c){return c.Model.extend({defaults:{id:"",ipAddresses:[]}})}.apply(b,d),!(void 0!==e&&(a.exports=e))},126:function(a,b,c){var d,e;d=[c("require/underscore"),c("shim/jquery"),c("require/backbone"),c(127),c(128),c(130),c(131),c("splunkjs/mvc/headerview")],e=function(a,b,c,d,e,f,g){return c.View.extend({initialize:function(d){this.options=a.extend({},this.options,d),this.template=a.template(b(g).html()),this.app=this.options.app,this.captureIpAddresses=this.options.captureIpAddresses;var h=this;IpAddressRouter=c.Router.extend({routes:{"":"showCaptureIps"},initialize:function(a){this.fetchingIpAddresses=h.captureIpAddresses.fetch()},showCaptureIps:function(){this.fetchingIpAddresses.done(function(a){var b=new e({app:h.app,componentId:"blacklist",ipAddressList:h.captureIpAddresses.get("blacklist"),el:"#blacklist",ipAddressView:f}),c=new e({app:h.app,componentId:"whitelist",ipAddressList:h.captureIpAddresses.get("whitelist"),el:"#whitelist",ipAddressView:f});c.render(),b.render()})}});new IpAddressRouter;c.history.start()},events:{"click #toggle-help":"toggleHelp"},toggleHelp:function(){b("#help").fadeToggle()},render:function(){return this.$el.html(this.template()),this}})}.apply(b,d),!(void 0!==e&&(a.exports=e))},128:function(a,b,c){var d,e;d=[c("shim/jquery"),c("require/underscore"),c("require/backbone"),c(129),c("shim/splunk.util")],e=function(a,b,c,d,e){return c.View.extend({initialize:function(a){this.options=b.extend({},this.options,a),this.ipAddressList=this.options.ipAddressList,this.ipAddressView=this.options.ipAddressView,this.componentId=this.options.componentId,this.app=this.options.app,this.ipAddressCollection=new c.Collection;for(var d=this.ipAddressList.get("ipAddresses"),e=0;e<d.length;e++)this.ipAddressCollection.add({value:d[e]});this.listView=new c.ListView({collection:this.ipAddressCollection,itemView:this.ipAddressView,el:this.$el.find(".ipAddressList")[0]}),this.listView.on("item:destroy",function(a){this.collection.remove(a.model)})},render:function(){var a=this;a.listView.render(),a.$el.find(".ipAddressList-controls")[0].innerHTML='<div id="adder"><input type="text" class="add-input input-xlarge" id="add-input" placeholder="Add Ip Address"/><button class="btn" id="add-button">Add</button><button class="btn btn-primary save-ip-button" id="save-button">Save</button>'},events:{"click #add-button":"addIpAddress","click #save-button":"saveIpAddresses"},addIpAddress:function(a){a.preventDefault();var b=this,c=b.$el.find("#add-input").val();if(c){var e=new d({val:this.stripLeadingZerosFromIp(c)});this.collidesWithExistingList(e.get("val"))?alert("Ip Address matches an existing entry!"):e.isValid()?(b.ipAddressCollection.add({value:e.get("val")}),b.$el.find("#add-input").val("")):e.validationError?alert(e.validationError):alert(e.validate({val:c}))}},collidesWithExistingList:function(a){return b.contains(this.ipAddressCollection.pluck("value"),a)},stripLeadingZerosFromIp:function(a){return a.split(".").map(function(a){return isNaN(a)?a:Number(a)}).join(".")},saveIpAddresses:function(){var a=this,b=this.ipAddressList.clone();b.set("ipAddresses",this.ipAddressCollection.pluck("value")),b.save(["id","ipAddresses"],{type:"put",url:Splunk.util.make_url(["custom","splunk_app_stream","captureipaddresses",this.componentId].join("/")),success:function(b){a.app.mediator.publish("view:''"),alert("IP Addresses saved successfully")},error:function(a){alert("Error saving IP Addresses")}}),this.app.mediator.publish(this.componentId+":save")},removeSelf:function(){return this.$el.empty(),this.undelegateEvents(),this}})}.apply(b,d),!(void 0!==e&&(a.exports=e))},129:function(a,b,c){var d,e;d=[c("shim/jquery"),c("require/underscore"),c("require/backbone")],e=function(a,b,c){return c.Model.extend({validate:function(a,b){var c,d=a.val;if(c=d.match(/^([^.]+)\.([^.]+)\.([^.]+)\.([^.\/]+)(\/(\d+))?$/)){for(var e=1;e<=4;++e){var f=c[e];if("*"!=f){if(!f.match(/^\d+$/))return"Invalid IPv4 address: octets must be decimal numbers (or wildcards)";if(parseInt(f)>255)return"Invalid IPv4 address: octets must be <= 255"}}if(c[5]){var g,h=parseInt(c[6]);if(0==h)g=0;else{if(!(h<=32))return"Invalid IPv4 network: masklen must be <= 32";g=4294967295<<32-h}var i=parseInt(c[1])<<24|parseInt(c[2])<<16|parseInt(c[3])<<8|parseInt(c[4]);if((i&g)!=i)return"Invalid IPv4 network: Host bits must be 0"}}else{if(!(c=d.match(/^[0-9A-Fa-f:\/]+$/)))return"Not a valid IPv4 or IPv6 address";for(var j=!1,k=0,l="init",m=[],n=-1,o=-1;d.length>0;){var p;switch(l){case"init":if(d.match(/^::/))j=!0,p=2,l="doublecolon";else{if(!(c=d.match(/^([0-9A-Fa-f]{1,4})/)))return"Invalid IPv6 address";p=c[1].length,l="address"}break;case"doublecolon":if(d.match(/^\//))p=1,l="slash";else{if(!(c=d.match(/^([0-9A-Fa-f]{1,4})/)))return"Invalid IPv6 address";p=c[1].length,l="address"}break;case"colon":if(!(c=d.match(/^([0-9A-Fa-f]{1,4})/)))return"Invalid IPv6 address";p=c[1].length,l="address";break;case"address":if(d.match(/^\//))p=1,l="slash";else if(d.match(/^::/)){if(j)return"Invalid IPv6 address: '::' can appear only once";j=!0,p=2,l="doublecolon"}else{if(!d.match(/^:/))return"Invalid IPv6 address";p=1,l="colon"}break;case"slash":if(!(c=d.match(/^(\d+)/)))return"Invalid IPv6 address";if(o=parseInt(c[1]),o>128)return"Invalid IPv6 address: prefix length must be <= 128";p=c[1].length,l="prefixlen";break;case"prefixlen":return"Invalid IPv6 addess: invalid character after prefix length"}if(d=d.substring(p),"address"==l?(m.push(c[1]),k++):"doublecolon"==l&&(n=k,k++),"slash"==l&&0==d.length)return"Invalid IPv6 address: missing prefix length after /";if(k>8)return"Invalid IPv6 address: address is too long"}if(!j&&k<8)return"Invalid IPv6 address: address is too short";if(o>=0){var q=["0","0","0","0","0","0","0","0"];n>=0&&Array.prototype.splice.apply(m,[n,0].concat(q.splice(0,8-m.length)));for(var r=[parseInt(m[0],16)<<16|parseInt(m[1],16),parseInt(m[2],16)<<16|parseInt(m[3],16),parseInt(m[4],16)<<16|parseInt(m[5],16),parseInt(m[6],16)<<16|parseInt(m[7],16)],s=[],e=0;e<4;++e)0==o?s.push(0):o>=32?(s.push(4294967295),o-=32):(s.push(4294967295<<32-o),o=0);for(var e=0;e<4;++e)if((r[e]&s[e])!=r[e])return"Invalid IPv6 prefix: Host bits must be 0"}}}})}.apply(b,d),!(void 0!==e&&(a.exports=e))},130:function(a,b,c){var d,e;d=[c("shim/jquery"),c("require/underscore"),c("require/backbone")],e=function(a,b,c){return c.View.extend({className:"list-item",template:b.template('<span><%- value %></span> <span class="destroy">x</span>'),events:{click:"onItemClick","click .destroy":"onDestroyClick"},render:function(){this.$el.html(this.template(this.model.toJSON()))},onItemClick:function(){this.trigger("click")},onDestroyClick:function(){this.trigger("destroy")}})}.apply(b,d),!(void 0!==e&&(a.exports=e))},131:function(a,b){a.exports='<script type="text/template">\n<div id="app-main-layout" class="global-ip-filters-page">\n    <div class="dashboard-body container-fluid main-section-body" data-role="main">\n\n        <!-- ===== -->\n        <!-- Title -->\n        <!-- ===== -->\n\n        <div class="row">\n            <div class="span12 dashboard-header clearfix">\n                <h2>IP Address Filters</h2>\n                <h3 class="page-subtitle">\n                    Use whitelist/blacklist filter rules to capture/ignore network data based on IP address.\n                    <span class="icon-question-circle" id="toggle-help"></span>\n                </h3>\n            </div>\n        </div>\n\n        <div id="help"> <!-- Begin help block (this section will be toggled on/off) -->\n\n            <!-- ========================= -->\n            <!-- IP Address Format Tooltip -->\n            <!-- ========================= -->\n\n            <div class="dashboard-row">\n                <div class="dashboard-cell span-half">\n\n                    <div class="dashboard-panel" id="ip-addr-format-tooltip">\n                        You can enter individual IP (v4 or v6) addresses, or a range of addresses, using these forms:\n                            <li>192.168.2.* (IPv4 octets may use * to indicate wildcard)</li>\n                            <li>10.20.30.0/24 (IPv4 CIDR notation)</li>\n                            <li>2001:0db8:85a3:0042:1000:8a2e:0370:7300/120 (IPv6 CIDR notation)</li>\n                    </div>\n\n                </div>\n            </div>\n\n            <!-- =================================== -->\n            <!-- Blacklist/Whitelist Breakdown Table -->\n            <!-- =================================== -->\n\n            <div class="dashboard-row">\n                <div class="dashboard-cell span-half">\n                    <div class="dashboard-panel">\n\n                        <table class="table table-striped table-hover" id="white-black-comparison-table">\n                            <tr>\n                                <th>Whitelist</th>\n                                <th>Blacklist</th>\n                                <th>Filter Results</th>\n                                <tr>\n                                    <td>No</td>\n                                    <td>No</td>\n                                    <td>Captures all IPs</td>\n                                </tr>\n                                <tr>\n                                    <td>No</td>\n                                    <td>Yes</td>\n                                    <td>Captures all IPs <i>except</i> blacklist items</td>\n                                </tr>\n                                <tr>\n                                    <td>Yes</td>\n                                    <td>No</td>\n                                    <td>Captures <i>only</i> whitelist IPs</td>\n                                </tr>\n                                 <tr>\n                                    <td>Yes</td>\n                                    <td>Yes</td>\n                                    <td>Captures all IPs in whitelist <i>OR</i> IPs not in blacklist</td>\n                                </tr>\n                            </tr>\n                        </table>\n\n                    </div>\n                </div>\n            </div>\n\n        </div><!-- End Help Block -->\n\n        <!-- ========= -->\n        <!-- Whitelist -->\n        <!-- ========= -->\n\n        <div class="dashboard-row">\n            <div class="dashboard-cell span-half">\n                <div class="dashboard-panel" >\n                    <div class="dashboard-element">\n\n                        <div class="panel-head">\n                            <h3>Whitelist IP Addresses </h3>\n                            <h5>Define a whitelist to capture data from IP addresses on that list only.</h5>\n                        </div>\n\n                        <div id="whitelist">\n                            <div class="ipAddressList" style="margin-top: 10px;"></div>\n                            <div class="ipAddressList-controls" style="margin-top: 10px;"></div>\n                        </div>\n\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <!-- ========= -->\n        <!-- Blacklist -->\n        <!-- ========= -->\n\n        <div class="dashboard-row">\n            <div class="dashboard-cell span-half">\n                <div class="dashboard-panel">\n                    <div class="dashboard-element">\n\n                        <div class="panel-head">\n                            <h3>Blacklist IP Addresses </h3>\n                            <h5>Define a blacklist to ignore those IP addresses, and allow data capture from all other IP addresses.</h5>\n                        </div>\n\n                        <div id="blacklist">\n                            <div class="ipAddressList" style="margin-top: 10px;"></div>\n                            <div class="ipAddressList-controls" style="margin-top: 10px;"></div>\n                        </div>\n\n                    </div>\n                </div>\n            </div>\n        </div>\n\n    </div>\n</div>\n</script>\n'}});
//# sourceMappingURL=capture_ip_addresses.js.map